generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model discords {
  id            Int            @id @default(autoincrement())
  discord_id    String         @unique @db.VarChar
  username      String         @db.VarChar
  created_at    DateTime       @db.Timestamp(6)
  updated_at    DateTime       @db.Timestamp(6)
  user_discords user_discords?
}

model permission_types {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar
  permissions permissions[]
}

model permissions {
  id               String             @id @db.Uuid
  name             String             @db.VarChar
  type             Int
  permission_types permission_types   @relation(fields: [type], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_permissions user_permissions[]
}

model user_details {
  id      Int    @id @default(autoincrement())
  user_id String @db.Uuid
  users   users  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user_discords {
  id         Int      @id(map: "discord_users_pkey") @default(autoincrement())
  user_id    String   @db.Uuid
  discord_id String   @unique @db.VarChar
  discords   discords @relation(fields: [discord_id], references: [discord_id], onDelete: NoAction, onUpdate: NoAction)
  users      users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user_permissions {
  id            Int         @id @default(autoincrement())
  user_id       String      @db.Uuid
  permission_id String      @db.Uuid
  permissions   permissions @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users         users       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id               String             @id @db.Uuid
  username         String?            @db.VarChar
  created_at       DateTime?          @db.Timestamp(6)
  updated_at       DateTime?          @db.Timestamp(6)
  user_details     user_details[]
  user_discords    user_discords[]
  user_permissions user_permissions[]
}

model user_handlers {
  id            Int             @id @default(autoincrement())
  platform_id   String          @db.VarChar
  platform_name String          @db.VarChar
  platform      String          @db.VarChar
  platform_game String          @db.VarChar
  user_id       String          @db.Uuid
  handler_stats handler_stats[]
}

model handler_stat_values {
  id            Int           @id @default(autoincrement())
  stat_id       String        @db.Uuid
  metric_id     Int
  value         Int
  created_at    DateTime      @db.Time(6)
  updated_at    DateTime      @db.Time(6)
  handler_stats handler_stats @relation(fields: [stat_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model handler_stats {
  id                  String                @id @db.Uuid
  handler_id          Int
  created_at          DateTime              @db.Timestamp(6)
  updated_at          DateTime              @db.Time(6)
  user_handlers       user_handlers         @relation(fields: [handler_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  handler_stat_values handler_stat_values[]
}

model stat_metrics {
  id       Int     @id @default(autoincrement())
  name     String  @db.VarChar
  disabled Boolean @default(false)
}
